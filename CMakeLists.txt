CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

PROJECT(stm32-NotSoSoftUart)
ENABLE_LANGUAGE(ASM)

# Generate compilation database for YcmCompleteMe
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Set cmake module path to reach cmake directory
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

# Put the binary file into bin directory
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")

SET(CMAKE_BUILD_TYPE Debug)

# Set the lists of user files
SET(SRC_DIR "${CMAKE_SOURCE_DIR}/app/src")
SET(HW_SRC_DIR "${CMAKE_SOURCE_DIR}/app/src/hw")
SET(TASKS_SRC_DIR "${CMAKE_SOURCE_DIR}/app/src/tasks")

SET(INC_DIR "${CMAKE_SOURCE_DIR}/app/inc")
SET(HW_INC_DIR "${CMAKE_SOURCE_DIR}/app/inc/hw")
SET(TASKS_INC_DIR "${CMAKE_SOURCE_DIR}/app/inc/tasks")

FIND_PACKAGE(NotSoSoftUart REQUIRED)

IF(UNIT_TEST_LOCAL)
	
	INCLUDE("${CMAKE_SOURCE_DIR}/cmake/unit_test_local.cmake")

	INCLUDE_DIRECTORIES(
		${INC_DIR}
		${TEST_INCLUDE_DIRS}
		${NotSoSoftUart_INCLUDE_DIRS}
	)
	
	ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}
		${TEST_SOURCES}
		${NotSoSoftUart_SOURCES}
	)

ELSE()
	# Set variables used by ObKo-stm32cmake 
	SET(TOOLCHAIN_PREFIX "$ENV{HOME}/ARMToolchain")
	SET(STM32_CHIP	"STM32F411CE")
	SET(STM32_FAMILY "F4")
	SET(STM32Cube_DIR "${CMAKE_SOURCE_DIR}/code_gen")
	SET(STM32_LINKER_SCRIPT	"${STM32Cube_DIR}/STM32F411CEUx_FLASH.ld")

	INCLUDE("${CMAKE_SOURCE_DIR}/cmake/gcc_stm32.cmake")
	INCLUDE("${CMAKE_SOURCE_DIR}/cmake/gcc_stm32f4.cmake")

	FIND_PACKAGE(CMSIS REQUIRED)

	SET(FREERTOS_HEAP_IMPL 4)
	FIND_PACKAGE(FreeRTOS REQUIRED)

	FIND_PACKAGE(STM32LL COMPONENTS gpio exti tim usart REQUIRED)
	FIND_PACKAGE(STM32HAL COMPONENTS tim REQUIRED)

	INCLUDE_DIRECTORIES(
		${INC_DIR}
		${HW_INC_DIR}
		${TASKS_INC_DIR}
		${CMSIS_INCLUDE_DIRS}
		${FreeRTOS_INCLUDE_DIRS}
		${STM32LL_INCLUDE_DIR}
		${STM32HAL_INCLUDE_DIR}
		${NotSoSoftUart_INCLUDE_DIRS}
	)

	FILE(GLOB PROJECT_SOURCES
		"${SRC_DIR}/*.c"
		"${HW_SRC_DIR}/*.c"
		"${TASKS_SRC_DIR}/*.c"
	)

	ADD_EXECUTABLE(${CMAKE_PROJECT_NAME} ${PROJECT_SOURCES} ${CMSIS_SOURCES} ${FreeRTOS_SOURCES} ${STM32LL_SOURCES} 
		${STM32HAL_SOURCES} ${NotSoSoftUart_SOURCES})

	STM32_SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME})
	STM32_ADD_HEX_BIN_TARGETS(${CMAKE_PROJECT_NAME})
ENDIF()

# Add "tags" target and make my_project depending on this target.
set_source_files_properties(tags PROPERTIES GENERATED true)
add_custom_target(tags
    COMMAND ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
add_dependencies(${CMAKE_PROJECT_NAME} tags)
